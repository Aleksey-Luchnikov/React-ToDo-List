{"version":3,"sources":["ToDo.js","ToDoForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","todo","toggleTask","removeTask","className","complete","onClick","id","task","ToDoForm","addTask","useState","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","value","type","onChange","currentTarget","onKeyDown","key","placeholder","App","todos","setTodos","filter","handleToggle","map","length","newItem","Math","random","toString","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAkBeA,MAlBf,YAA+C,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAC9B,OACG,sBAAmBC,UAAU,YAA7B,UACG,qBACAA,UAAWH,EAAKI,SAAW,mBAAqB,YAChDC,QAAS,kBAAMJ,EAAWD,EAAKM,KAF/B,SAIIN,EAAKO,OAET,qBAAKJ,UAAU,cACfE,QAAS,kBAAMH,EAAWF,EAAKM,KAD/B,iBAPON,EAAKM,KCiCNE,MAjCf,YAAgC,IAAZC,EAAW,EAAXA,QAChB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KASjB,OACI,uBAAMI,SAAUH,EAAhB,UACI,uBACII,MAAON,EACPO,KAAK,OACLC,SArBS,SAACL,GACpBF,EAAaE,EAAEM,cAAcH,QAqBnBI,UAZW,SAACP,GACP,UAAVA,EAAEQ,KACFT,EAAaC,IAWRS,YAAY,uFAEhB,gGCoBGC,MA9Cf,WACE,MAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAaMxB,EAAa,SAACI,GAClBoB,EAAS,YAAID,EAAME,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,KAAOA,QAG5CsB,EAAe,SAACtB,GACpBoB,EAAS,YACJD,EAAMI,KAAI,SAAC7B,GAAD,OACbA,EAAKM,KAAOA,EAAZ,2BAAqBN,GAArB,IAA2BI,UAAWJ,EAAKI,WAA3C,eAA2DJ,SAI/D,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uGAAmBsB,EAAMK,YAE3B,cAAC,EAAD,CAAUrB,QA3BE,SAACE,GACf,GAAGA,EAAW,CACZ,IAAMoB,EAAU,CACdzB,GAAI0B,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxC5B,KAAMI,EACNP,UAAU,GAEZsB,EAAS,GAAD,mBAAKD,GAAL,CAAYM,SAqBnBN,EAAMI,KAAI,SAAC7B,GACV,OACE,cAAC,EAAD,CACAA,KAAMA,EAENC,WAAY2B,EACZ1B,WAAYA,GAFPuB,EAAMnB,WC3BN8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2926f5c.chunk.js","sourcesContent":["function ToDo({todo, toggleTask, removeTask}) {\r\n   return (\r\n      <div key={todo.id} className=\"item-todo\">\r\n         <div \r\n         className={todo.complete ? \"item-text strike\" : \"item-text\"} \r\n         onClick={() => toggleTask(todo.id)}\r\n         >\r\n            {todo.task}\r\n         </div>\r\n         <div className=\"item-delete\" \r\n         onClick={() => removeTask(todo.id)}>\r\n            X\r\n         </div>\r\n          \r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ToDo","import { useState } from 'react'\r\n\r\nfunction ToDoForm({ addTask }) {\r\n    const [userInput, setUserInput] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n      setUserInput(e.currentTarget.value)\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(userInput)\r\n        setUserInput(\"\")\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === \"Enter\") {\r\n           handleSubmit(e)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                value={userInput}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyPress}\r\n                placeholder=\"Введите задачу...\"\r\n            />        \r\n            <button>Сохранить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm","import { useState } from 'react'\nimport ToDo from '../src/ToDo'\nimport ToDoForm from '../src/ToDoForm'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const addTask = (userInput) => {\n    if(userInput) {\n      const newItem = {\n        id: Math.random().toString(36).substr(2,9),\n        task: userInput,\n        complete: false,\n      }\n      setTodos([...todos, newItem])\n    }\n  }\n\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n\n  const handleToggle = (id) => {\n    setTodos([\n      ...todos.map((todo) => \n      todo.id === id ? {...todo, complete: !todo.complete} : {...todo}\n      )\n    ])\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Список задач: {todos.length}</h1>\n      </header>\n      <ToDoForm addTask={addTask}/>\n      {todos.map((todo) => {\n        return(\n          <ToDo\n          todo={todo}\n          key={todos.id}\n          toggleTask={handleToggle}\n          removeTask={removeTask}\n          />\n        )\n      })}\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}